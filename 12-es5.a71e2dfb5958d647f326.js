function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{EEtZ:function(t,e,a){"use strict";a.d(e,"a",(function(){return c})),a.d(e,"b",(function(){return C}));var n=a("8Y7J"),l=(a("5Izy"),a("SVse")),o=(a("SCoL"),a("66zS")),d=a("PgQK"),c=(a("0YeR"),n.zb({encapsulation:2,styles:[],data:{animation:[{type:7,name:"slideAlertMotion",definitions:[{type:1,expr:":leave",animation:[{type:6,styles:{opacity:1,transform:"scaleY(1)",transformOrigin:"0% 0%"},offset:null},{type:4,styles:{type:6,styles:{opacity:0,transform:"scaleY(0)",transformOrigin:"0% 0%"},offset:null},timings:"0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86)"}],options:null}],options:{}}]}}));function r(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,2,null,null,null,null,null,null,null)),(t()(),n.Bb(1,0,null,null,1,"i",[["class","ant-alert-icon"],["nz-icon",""]],[[2,"anticon",null]],null,null,null,null)),n.Ab(2,2703360,null,0,o.a,[n.l,o.d,n.E,[2,o.c]],{nzType:[0,"nzType"],nzTheme:[1,"nzTheme"]},null)],(function(t,e){var a=e.component;t(e,2,0,a.nzIconType||a.inferredIconType,a.iconTheme)}),(function(t,e){t(e,1,0,!0)}))}function i(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,1,null,null,null,null,null,null,null)),(t()(),n.ac(1,null,["",""]))],null,(function(t,e){t(e,1,0,e.component.nzMessage)}))}function s(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,2,"span",[["class","ant-alert-message"]],null,null,null,null,null)),(t()(),n.kb(16777216,null,null,1,null,i)),n.Ab(2,540672,null,0,d.b,[n.R,n.N],{nzStringTemplateOutlet:[0,"nzStringTemplateOutlet"]},null)],(function(t,e){t(e,2,0,e.component.nzMessage)}),null)}function u(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,1,null,null,null,null,null,null,null)),(t()(),n.ac(1,null,["",""]))],null,(function(t,e){t(e,1,0,e.component.nzDescription)}))}function h(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,2,"span",[["class","ant-alert-description"]],null,null,null,null,null)),(t()(),n.kb(16777216,null,null,1,null,u)),n.Ab(2,540672,null,0,d.b,[n.R,n.N],{nzStringTemplateOutlet:[0,"nzStringTemplateOutlet"]},null)],(function(t,e){t(e,2,0,e.component.nzDescription)}),null)}function p(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,1,"i",[["nz-icon",""],["nzType","close"]],[[2,"anticon",null]],null,null,null,null)),n.Ab(1,2703360,null,0,o.a,[n.l,o.d,n.E,[2,o.c]],{nzType:[0,"nzType"]},null)],(function(t,e){t(e,1,0,"close")}),(function(t,e){t(e,0,0,!0)}))}function b(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,2,null,null,null,null,null,null,null)),(t()(),n.Bb(1,0,null,null,1,"span",[["class","ant-alert-close-text"]],null,null,null,null,null)),(t()(),n.ac(2,null,["",""]))],null,(function(t,e){t(e,2,0,e.component.nzCloseText)}))}function g(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,2,null,null,null,null,null,null,null)),(t()(),n.kb(16777216,null,null,1,null,b)),n.Ab(2,540672,null,0,d.b,[n.R,n.N],{nzStringTemplateOutlet:[0,"nzStringTemplateOutlet"]},null),(t()(),n.kb(0,null,null,0))],(function(t,e){t(e,2,0,e.component.nzCloseText)}),null)}function m(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,3,"button",[["class","ant-alert-close-icon"],["tabindex","0"],["type","button"]],null,[[null,"click"]],(function(t,e,a){var n=!0;return"click"===e&&(n=!1!==t.component.closeAlert()&&n),n}),null,null)),(t()(),n.kb(0,[["closeDefaultTemplate",2]],null,0,null,p)),(t()(),n.kb(16777216,null,null,1,null,g)),n.Ab(3,16384,null,0,l.n,[n.R,n.N],{ngIf:[0,"ngIf"],ngIfElse:[1,"ngIfElse"]},null)],(function(t,e){t(e,3,0,e.component.nzCloseText,n.Qb(e,1))}),null)}function f(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,8,"div",[["class","ant-alert"]],[[2,"ant-alert-success",null],[2,"ant-alert-info",null],[2,"ant-alert-warning",null],[2,"ant-alert-error",null],[2,"ant-alert-no-icon",null],[2,"ant-alert-banner",null],[2,"ant-alert-closable",null],[2,"ant-alert-with-description",null],[24,"@slideAlertMotion",0]],[[null,"@slideAlertMotion.done"]],(function(t,e,a){var n=!0;return"@slideAlertMotion.done"===e&&(n=!1!==t.component.onFadeAnimationDone()&&n),n}),null,null)),(t()(),n.kb(16777216,null,null,1,null,r)),n.Ab(2,16384,null,0,l.n,[n.R,n.N],{ngIf:[0,"ngIf"]},null),(t()(),n.kb(16777216,null,null,1,null,s)),n.Ab(4,16384,null,0,l.n,[n.R,n.N],{ngIf:[0,"ngIf"]},null),(t()(),n.kb(16777216,null,null,1,null,h)),n.Ab(6,16384,null,0,l.n,[n.R,n.N],{ngIf:[0,"ngIf"]},null),(t()(),n.kb(16777216,null,null,1,null,m)),n.Ab(8,16384,null,0,l.n,[n.R,n.N],{ngIf:[0,"ngIf"]},null)],(function(t,e){var a=e.component;t(e,2,0,a.nzShowIcon),t(e,4,0,a.nzMessage),t(e,6,0,a.nzDescription),t(e,8,0,a.nzCloseable||a.nzCloseText)}),(function(t,e){var a=e.component;t(e,0,0,"success"===a.nzType,"info"===a.nzType,"warning"===a.nzType,"error"===a.nzType,!a.nzShowIcon,a.nzBanner,a.nzCloseable,!!a.nzDescription,void 0)}))}function C(t){return n.dc(2,[(t()(),n.kb(16777216,null,null,1,null,f)),n.Ab(1,16384,null,0,l.n,[n.R,n.N],{ngIf:[0,"ngIf"]},null)],(function(t,e){t(e,1,0,!e.component.closed)}),null)}},z19X:function(t,e,a){"use strict";a.r(e),a.d(e,"AclModuleNgFactory",(function(){return Ta}));var n=a("8Y7J"),l=a("0qEG"),o=function t(){_classCallCheck(this,t),this.item={cols:1,urls:{"en-US":"packages/acl/docs/control.en-US.md","zh-CN":"packages/acl/docs/control.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><h2 id="Foreword">Foreword<a onclick="window.location.hash = \'Foreword\'" class="anchor">#</a></h2><p>Many times you need to control the permissions of a button. <code>@delon/acl</code> provides an <code>acl</code> directive that allows you to control the permissions of a button, table, list, etc.</p><h2 id="Principle">Principle<a onclick="window.location.hash = \'Principle\'" class="anchor">#</a></h2><p><code>[acl]</code> adds a <code>acl__hide</code> style to the target element by default, and hides the unauthorized element with <code>display: none</code>, which is a simple and efficient way.</p><p>The corresponding <code>*aclIf</code> is a structured directive similar to <code>ngIf</code> which does not render the element when it is not authorized. <strong>Note:</strong> In order to keep it simple, it does not support <code>acl-ability</code> permission point configuration.</p><h2 id="DEMO">DEMO<a onclick="window.location.hash = \'DEMO\'" class="anchor">#</a></h2><h3 id="Role">Role<a onclick="window.location.hash = \'Role\'" class="anchor">#</a></h3><p>Displayed when the button must have a user role.</p><pre class="hljs language-html"><code>&lt;button [acl]="\'user\'"&gt;&lt;/button&gt;\n&lt;button *aclIf="\'user\'"&gt;&lt;/button&gt;</code></pre><p>Displayed when the button must have a user or manage role.</p><pre class="hljs language-html"><code>&lt;button [acl]="[\'user\', \'manage\']"&gt;&lt;/button&gt;\n&lt;button *aclIf="[\'user\', \'manage\']"&gt;&lt;/button&gt;</code></pre><p>Displayed when the button must have a user and manage role.</p><pre class="hljs language-html"><code>&lt;button [acl]="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt;\n&lt;button *aclIf="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt;</code></pre><p>Displayed when the input muse have a user role, displayed text when it\'s not authorized.</p><pre class="hljs language-html"><code>&lt;input nz-input *aclIf="\'user\'; else unauthorized"&gt;\n&lt;ng-template #unauthorized&gt;{{user}}&lt;/ng-template&gt;</code></pre><p>Use <code>except</code> reverse control to displayed when it\'s not authorized.</p><pre class="hljs language-html"><code>&lt;ng-template [aclIf]="role" except&gt;\n  &lt;input nz-input&gt;\n&lt;/ng-template&gt;</code></pre><h3 id="Permission">Permission<a onclick="window.location.hash = \'Permission\'" class="anchor">#</a></h3><p>Displayed when the button must have a 10 value permisseion.</p><pre class="hljs language-html"><code>&lt;button [acl]="10"&gt;&lt;/button&gt;</code></pre><p>In order for the acl instruction to be a role or a permission, so the value of the parameter value is <code>string</code> which mean the role, <code>number</code> which mean the permission. Use the <code>acl-ability</code> parameter if the permission is a string.</p><pre class="hljs language-html"><code>&lt;button acl [acl-ability]="\'USER-EDIT\'"&gt;&lt;/button&gt;</code></pre><ul><li><p><code>oneOf</code> Must be valid against exactly one of the given permission (default).</p></li><li><p><code>allOf</code> Must be valid against all of the given permission</p></li></ul><p>Displayed when the button must have a <code>10</code> and <code>USER-EDIT</code> permission.</p><pre class="hljs language-html"><code>&lt;button [acl]="{ ability: [10, \'USER-EDIT\'], mode: \'allOf\' }"&gt;&lt;/button&gt;</code></pre><p><strong>String permission</strong></p><p>The check permission is via the <code>can</code> method, and through <a href="/docs/global-config" data-url="/docs/global-config">Global Configuration</a> <code>acl.preCan</code> method, which can be used to implement a string to distinguish roles or permissions.</p><pre class="hljs language-ts"><code>// global-config.module.ts\nconst alainConfig: AlainConfig = {\n  acl: {\n    preCan: (roleOrAbility) => {\n      const str = roleOrAbility.toString();\n      return str.startsWith(\'ability.\') ? { ability: [ str ] } : null;\n    }\n  }\n};</code></pre><p>Therefore, passing a string with the beginning of <code>ability.</code> will be considered a permission point, for example:</p><pre class="hljs language-html"><code>&lt;button acl="ability.user.edit"&gt;&lt;/button&gt;</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="*aclIf">*aclIf<a onclick="window.location.hash = \'*aclIf\'" class="anchor">#</a></h3><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td><code>[aclIf]</code></td><td><code>can</code> method parameter</td><td><code>ACLCanType</code></td><td>-</td></tr><tr><td><code>[aclIfThen]</code></td><td>Display template when authorized</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[aclIfElse]</code></td><td>Display template when not authorized</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[except]</code></td><td>Permissions denied to display</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table>',meta:{order:3,title:"Granular permissions",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Principle",title:"Principle",h:2},{id:"DEMO",title:"DEMO",h:2},{id:"Role",title:"Role",h:3},{id:"Permission",title:"Permission",h:3},{id:"API",title:"API",h:2},{id:"*aclIf",title:"*aclIf",h:3}]},"zh-CN":{content:'<section class="markdown"><h2 id="\u5199\u5728\u524d\u9762">\u5199\u5728\u524d\u9762<a onclick="window.location.hash = \'\u5199\u5728\u524d\u9762\'" class="anchor">#</a></h2><p>\u5f88\u591a\u65f6\u5019\u9700\u8981\u5bf9\u67d0\u4e2a\u6309\u94ae\u8fdb\u884c\u6743\u9650\u63a7\u5236\uff0c<code>@delon/acl</code> \u63d0\u4f9b\u4e00\u4e2a <code>acl</code> \u6307\u4ee4\uff0c\u53ef\u4ee5\u5229\u7528\u89d2\u8272\u6216\u6743\u9650\u70b9\u5bf9\u67d0\u4e2a\u6309\u94ae\u3001\u8868\u683c\u3001\u5217\u8868\u7b49\u5143\u7d20\u8fdb\u884c\u6743\u9650\u63a7\u5236\u3002</p><h2 id="\u539f\u7406">\u539f\u7406<a onclick="window.location.hash = \'\u539f\u7406\'" class="anchor">#</a></h2><p><code>[acl]</code> \u9ed8\u8ba4\u4f1a\u5728\u76ee\u6807\u5143\u7d20\u4e0a\u589e\u52a0\u4e00\u4e2a <code>acl__hide</code> \u6837\u5f0f\uff0c\u5229\u7528 <code>display: none</code> \u6765\u9690\u85cf\u672a\u6388\u6743\u5143\u7d20\uff0c\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u3001\u53c8\u9ad8\u6548\u7684\u65b9\u5f0f\u3002</p><p>\u4ee5\u6b64\u76f8\u5bf9\u5e94\u7684 <code>*aclIf</code> \u662f\u4e00\u4e2a\u7ed3\u6784\u578b\u6307\u4ee4\uff0c\u5b83\u7c7b\u4f3c <code>ngIf</code> \u5728\u672a\u6388\u6743\u65f6\u4f1a\u4e0d\u6e32\u67d3\u8be5\u5143\u7d20\u3002<strong>\u6ce8\uff1a</strong> \u4e3a\u4e86\u4fdd\u6301\u7b80\u6d01\u5b83\u5e76\u4e0d\u652f\u6301 <code>acl-ability</code> \u6743\u9650\u70b9\u914d\u7f6e\u3002</p><h2 id="\u793a\u4f8b">\u793a\u4f8b<a onclick="window.location.hash = \'\u793a\u4f8b\'" class="anchor">#</a></h2><h3 id="\u89d2\u8272">\u89d2\u8272<a onclick="window.location.hash = \'\u89d2\u8272\'" class="anchor">#</a></h3><p>\u6309\u94ae\u5fc5\u987b\u62e5\u6709 user \u89d2\u8272\u663e\u793a\u3002</p><pre class="hljs language-html"><code>&lt;button [acl]="\'user\'"&gt;&lt;/button&gt;\n&lt;button *aclIf="\'user\'"&gt;&lt;/button&gt;</code></pre><p>\u6309\u94ae\u5fc5\u987b\u62e5\u6709 user \u6216 manage \u89d2\u8272\u663e\u793a\u3002</p><pre class="hljs language-html"><code>&lt;button [acl]="[\'user\', \'manage\']"&gt;&lt;/button&gt;\n&lt;button *aclIf="[\'user\', \'manage\']"&gt;&lt;/button&gt;</code></pre><p>\u6309\u94ae\u5fc5\u987b\u62e5\u6709 user \u548c manage \u89d2\u8272\u663e\u793a\u3002</p><pre class="hljs language-html"><code>&lt;button [acl]="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt;\n&lt;button *aclIf="{ role: [\'user\', \'manage\'], mode: \'allOf\' }"&gt;&lt;/button&gt;</code></pre><p>\u5f53\u62e5\u6709 user \u89d2\u8272\u663e\u793a\u6587\u672c\u6846\uff0c\u672a\u6388\u6743\u663e\u793a\u6587\u672c\u3002</p><pre class="hljs language-html"><code>&lt;input nz-input *aclIf="\'user\'; else unauthorized"&gt;\n&lt;ng-template #unauthorized&gt;{{user}}&lt;/ng-template&gt;</code></pre><p>\u4f7f\u7528 <code>except</code> \u53cd\u5411\u63a7\u5236\uff0c\u5f53\u672a\u62e5\u6709 user \u89d2\u8272\u65f6\u663e\u793a\u3002</p><pre class="hljs language-html"><code>&lt;ng-template [aclIf]="role" except&gt;\n  &lt;input nz-input&gt;\n&lt;/ng-template&gt;</code></pre><h3 id="\u6743\u9650\u70b9">\u6743\u9650\u70b9<a onclick="window.location.hash = \'\u6743\u9650\u70b9\'" class="anchor">#</a></h3><p>\u6309\u94ae\u5fc5\u987b\u62e5\u6709 10 \u6743\u9650\u70b9\u663e\u793a\u3002</p><pre class="hljs language-html"><code>&lt;button [acl]="10"&gt;&lt;/button&gt;</code></pre><p>acl \u6307\u4ee4\u4e3a\u4e86\u80fd\u6240\u4f20\u9012\u7684\u503c\u662f\u89d2\u8272\u8fd8\u662f\u6743\u9650\u70b9\uff0c\u6240\u4ee5\u4ee5 <code>string</code> \u7c7b\u578b\u8868\u793a\u89d2\u8272\u3001<code>number</code> \u7c7b\u578b\u8868\u793a\u6743\u9650\u70b9\uff0c\u82e5\u6743\u9650\u70b9\u4e3a\u5b57\u7b26\u4e32\uff0c\u53ef\u4f7f\u7528\u4ee5\u4e0b\u5199\u6cd5\u3002</p><pre class="hljs language-html"><code>&lt;button acl [acl-ability]="\'USER-EDIT\'"&gt;&lt;/button&gt;</code></pre><p>\u4f7f\u7528 <code>mode: \'allOf\'</code> \u8868\u793a\u5fc5\u987b\u540c\u65f6\u62e5\u6709\u3002</p><ul><li><p><code>oneOf</code> \u8868\u793a\u53ea\u987b\u6ee1\u8db3\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u4e2d\u7684\u4e00\u9879\u7b97\u6709\u6548\uff08\u9ed8\u8ba4\uff09</p></li><li><p><code>allOf</code> \u8868\u793a\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u7b97\u6709\u6548</p></li></ul><p>\u6309\u94ae\u5fc5\u987b\u62e5\u6709 <code>10</code> \u548c <code>USER-EDIT</code> \u6743\u9650\u70b9\u65f6\u663e\u793a\u3002</p><pre class="hljs language-html"><code>&lt;button [acl]="{ ability: [10, \'USER-EDIT\'], mode: \'allOf\' }"&gt;&lt;/button&gt;</code></pre><p><strong>\u5b57\u7b26\u4e32\u578b\u6743\u9650\u70b9</strong></p><p>\u68c0\u67e5\u6743\u9650\u662f\u901a\u8fc7 <code>can</code> \u65b9\u6cd5\uff0c\u901a\u8fc7<a href="/docs/global-config" data-url="/docs/global-config">\u5168\u5c40\u914d\u7f6e</a> <code>acl.preCan</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5229\u7528\u8be5\u65b9\u6cd5\u6765\u5b9e\u73b0\u4e00\u4e2a\u5b57\u7b26\u4e32\u533a\u5206\u89d2\u8272\u6216\u6743\u9650\u70b9\u3002</p><pre class="hljs language-ts"><code>// global-config.module.ts\nconst alainConfig: AlainConfig = {\n  acl: {\n    preCan: (roleOrAbility) => {\n      const str = roleOrAbility.toString();\n      return str.startsWith(\'ability.\') ? { ability: [ str ] } : null;\n    }\n  }\n};</code></pre><p>\u56e0\u6b64\uff0c\u5f53\u4f20\u9012\u4e00\u4e2a\u5e26\u6709 <code>ability.</code> \u5f00\u5934\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6743\u9650\u70b9\uff0c\u4f8b\u5982\uff1a</p><pre class="hljs language-html"><code>&lt;button acl="ability.user.edit"&gt;&lt;/button&gt;</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="*aclIf">*aclIf<a onclick="window.location.hash = \'*aclIf\'" class="anchor">#</a></h3><table><thead><tr><th>\u53c2\u6570</th><th>\u8bf4\u660e</th><th>\u7c7b\u578b</th><th>\u9ed8\u8ba4\u503c</th></tr></thead><tbody><tr><td><code>[aclIf]</code></td><td><code>can</code> \u65b9\u6cd5\u53c2\u6570\u4f53</td><td><code>ACLCanType</code></td><td>-</td></tr><tr><td><code>[aclIfThen]</code></td><td>\u5df2\u6388\u6743\u65f6\u663e\u793a\u6a21\u677f</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[aclIfElse]</code></td><td>\u672a\u6388\u6743\u65f6\u663e\u793a\u6a21\u677f</td><td><code>TemplateRef&lt;void> | null</code></td><td>-</td></tr><tr><td><code>[except]</code></td><td>\u672a\u6388\u6743\u65f6\u663e\u793a</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table>',meta:{order:3,title:"\u7c92\u5ea6\u63a7\u5236",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"\u539f\u7406",title:"\u539f\u7406",h:2},{id:"\u793a\u4f8b",title:"\u793a\u4f8b",h:2},{id:"\u89d2\u8272",title:"\u89d2\u8272",h:3},{id:"\u6743\u9650\u70b9",title:"\u6743\u9650\u70b9",h:3},{id:"API",title:"API",h:2},{id:"*aclIf",title:"*aclIf",h:3}]}},demo:!1},this.codes=[]},d=function t(){_classCallCheck(this,t),this.item={cols:1,urls:{"en-US":"packages/acl/docs/getting-started.en-US.md","zh-CN":"packages/acl/docs/getting-started.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><p>ACL (Access Control List) is a very simple role-based permission control method, you can use in any Angular projects, a online <a target="_blank" href="//ng-alain.github.io/ng-alain/#/logics/acl" data-url="//ng-alain.github.io/ng-alain/#/logics/acl">DEMO</a></p><h2 id="About-ACLService">About ACLService<a onclick="window.location.hash = \'About-ACLService\'" class="anchor">#</a></h2><p>The <code>ACLService</code> service class contains a set of methods based on role permissions. For a better coding experience ng-alain has multiple components or modules that depend on it, such as <code>st</code>, <code>MenuService</code> etc.. So, when you encounter the <code>acl</code> attribute, it means the parameter value of the <a href="#ACLCanType" data-url="#ACLCanType">can</a> method.</p><h2 id="Usage">Usage<a onclick="window.location.hash = \'Usage\'" class="anchor">#</a></h2><p>Install <code>@delon/acl</code>:</p><pre class="hljs language-bash"><code>yarn add @delon/acl</code></pre><p>Import <code>DelonACLModule</code> module:</p><pre class="hljs language-typescript"><code>import { DelonACLModule } from \'@delon/acl\';\n\n@NgModule({\n  imports: [\n    DelonACLModule.forRoot()\n  ]\n})\nexport class AppModule { }</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="Parameters">Parameters<a onclick="window.location.hash = \'Parameters\'" class="anchor">#</a></h3><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th><th>Global Config</th></tr></thead><tbody><tr><td><code>[guard_url]</code></td><td><code>string</code></td><td>Router URL when guard fail</td><td><code>/403</code></td><td>\u2705</td></tr><tr><td><code>[preCan]</code></td><td><code>(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>) => <a data-toc="ACLType">ACLType</a></code></td><td><code>can</code> before execution callback</td><td>-</td><td>\u2705</td></tr></tbody></table><blockquote><p>You can override them via <a href="/docs/global-config" data-url="/docs/global-config">Global Configuration</a>.</p></blockquote><h3 id="ACLService">ACLService<a onclick="window.location.hash = \'ACLService\'" class="anchor">#</a></h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>[change]</code></td><td>Listen for ACL change notifications</td></tr><tr><td><code>[data]</code></td><td>Get all ACL data</td></tr><tr><td><code>setFull(val: boolean)</code></td><td>Whether to super administrator</td></tr><tr><td><code>set(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>Set current user role or permission (automatic override)</td></tr><tr><td><code>setRole(roles: string[])</code></td><td>Set current user role (automatic override)</td></tr><tr><td><code>setAbility(abilities: (number | string)[])</code></td><td>Set current user permission (automatic override)</td></tr><tr><td><code>add(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>Add role or permission to the current user</td></tr><tr><td><code>attachRole(roles: string[])</code></td><td>Attach a role to the current user</td></tr><tr><td><code>attachAbility(abilities: (number | string)[])</code></td><td>Attach a permission to the current user</td></tr><tr><td><code>removeRole(roles: string[])</code></td><td>Remove the role for the current user</td></tr><tr><td><code>removeAbility(abilities: (number | string)[])</code></td><td>Remove the permission for the current user</td></tr><tr><td><code>can(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>Whether the current user has a role</td></tr><tr><td><code>canAbility(ability: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>Whether the current user has a permission</td></tr></tbody></table><h3 id="ACLCanType">ACLCanType<a onclick="window.location.hash = \'ACLCanType\'" class="anchor">#</a></h3><pre class="hljs language-ts"><code>type ACLCanType = number | number[] | string | string[] | ACLType</code></pre><h3 id="ACLType">ACLType<a onclick="window.location.hash = \'ACLType\'" class="anchor">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Summary</th><th>Default</th></tr></thead><tbody><tr><td><code>[role]</code></td><td><code>string[]</code></td><td>List of role</td><td>-</td></tr><tr><td><code>[ability]</code></td><td><code>number[], string[]</code></td><td>List of permission</td><td>-</td></tr><tr><td><code>[mode]</code></td><td><code>allOf, oneOf</code></td><td><code>allOf</code> Must be valid against all of the given permission.<br><code>oneOf</code> Must be valid against exactly one of the given permission.</td><td><code>oneOf</code></td></tr><tr><td><code>[except]</code></td><td><code>boolean</code></td><td>Whether it\'s except, when the result is <code>true</code>, it means unauthorized</td><td><code>false</code></td></tr></tbody></table>',meta:{order:1,title:"Getting Started",type:"Documents"},toc:[{id:"About-ACLService",title:"About ACLService",h:2},{id:"Usage",title:"Usage",h:2},{id:"API",title:"API",h:2},{id:"Parameters",title:"Parameters",h:3},{id:"ACLService",title:"ACLService",h:3},{id:"ACLCanType",title:"ACLCanType",h:3},{id:"ACLType",title:"ACLType",h:3}]},"zh-CN":{content:'<section class="markdown"><p>ACL \u5168\u79f0\u53eb\u8bbf\u95ee\u63a7\u5236\u5217\u8868\uff08Access Control List\uff09\uff0c\u662f\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u57fa\u4e8e\u89d2\u8272\u6743\u9650\u63a7\u5236\u65b9\u5f0f\u3002\u4e00\u4e2a\u5b8c\u5168\u72ec\u7acb <code>@delon/acl</code> \u6a21\u5757\uff08<a target="_blank" href="//ng-alain.github.io/ng-alain/#/logics/acl" data-url="//ng-alain.github.io/ng-alain/#/logics/acl">DEMO</a>\uff09\u3002</p><h2 id="\u5982\u4f55\u8fd0\u884c">\u5982\u4f55\u8fd0\u884c<a onclick="window.location.hash = \'\u5982\u4f55\u8fd0\u884c\'" class="anchor">#</a></h2><p>\u5185\u90e8\u5b9e\u9645\u662f\u4e00\u4e2a <code>ACLService</code> \u5b83\u63d0\u4f9b\u4e00\u5957\u57fa\u4e8e\u89d2\u8272\u6743\u9650\u670d\u52a1\u7c7b\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u7f16\u7801\u4f53\u9a8c ng-alain \u6709\u591a\u5904\u7ec4\u4ef6\u6216\u6a21\u5757\u4e5f\u4f9d\u8d56\u4e8e\u5b83\uff0c\u4f8b\u5982\uff1a<code>st</code>\u3001<code>MenuService</code> \u7b49\uff0c\u5e76\u4e14\u8fd9\u4e9b\u4f1a\u4ee5 <code>acl</code> \u5c5e\u6027\u7684\u5f62\u5f0f\u8868\u73b0\u3002\u56e0\u6b64\uff0c\u5f53\u9047\u5230 <code>acl</code> \u5c5e\u6027\u90fd\u8868\u793a <a href="#ACLCanType" data-url="#ACLCanType">can</a> \u65b9\u6cd5\u7684<strong>\u53c2\u6570\u503c</strong>\u3002</p><h2 id="\u5982\u4f55\u4f7f\u7528">\u5982\u4f55\u4f7f\u7528<a onclick="window.location.hash = \'\u5982\u4f55\u4f7f\u7528\'" class="anchor">#</a></h2><p>\u5b89\u88c5 <code>@delon/acl</code> \u4f9d\u8d56\u5305\uff1a</p><pre class="hljs language-bash"><code>yarn add @delon/acl</code></pre><p>\u5bfc\u5165 <code>DelonACLModule</code> \u6a21\u5757\uff1a</p><pre class="hljs language-typescript"><code>import { DelonACLModule } from \'@delon/acl\';\n\n@NgModule({\n  imports: [\n    DelonACLModule.forRoot()\n  ]\n})\nexport class AppModule { }</code></pre></section>',api:'<h2 id="API">API<a onclick="window.location.hash = \'API\'" class="anchor">#</a></h2><h3 id="\u53c2\u6570">\u53c2\u6570<a onclick="window.location.hash = \'\u53c2\u6570\'" class="anchor">#</a></h3><table><thead><tr><th>\u53c2\u6570</th><th>\u8bf4\u660e</th><th>\u7c7b\u578b</th><th>\u9ed8\u8ba4\u503c</th><th>\u5168\u5c40\u914d\u7f6e</th></tr></thead><tbody><tr><td><code>[guard_url]</code></td><td><code>string</code></td><td>\u8def\u7531\u5b88\u536b\u5931\u8d25\u540e\u8df3\u8f6c</td><td><code>/403</code></td><td>\u2705</td></tr><tr><td><code>[preCan]</code></td><td><code>(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>) => <a data-toc="ACLType">ACLType</a></code></td><td><code>can</code> \u6267\u884c\u524d\u56de\u8c03</td><td>-</td><td>\u2705</td></tr></tbody></table><blockquote><p>\u53ef\u4ee5\u901a\u8fc7<a href="/docs/global-config" data-url="/docs/global-config">\u5168\u5c40\u914d\u7f6e</a>\u8986\u76d6\u5b83\u4eec\u3002</p></blockquote><h3 id="ACLService">ACLService<a onclick="window.location.hash = \'ACLService\'" class="anchor">#</a></h3><table><thead><tr><th>\u65b9\u6cd5</th><th>\u8bf4\u660e</th></tr></thead><tbody><tr><td><code>[change]</code></td><td>\u76d1\u542cACL\u53d8\u66f4\u901a\u77e5</td></tr><tr><td><code>[data]</code></td><td>\u83b7\u53d6\u6240\u6709ACL\u6570\u636e</td></tr><tr><td><code>setFull(val: boolean)</code></td><td>\u6807\u8bc6\u5f53\u524d\u7528\u6237\u4e3a\u5168\u91cf\uff0c\u5373\u4e0d\u53d7\u9650</td></tr><tr><td><code>set(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u89d2\u8272\u6216\u6743\u9650\u80fd\u529b\uff08\u4f1a\u5148\u6e05\u9664\u6240\u6709\uff09</td></tr><tr><td><code>setRole(roles: string[])</code></td><td>\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u89d2\u8272\uff08\u4f1a\u5148\u6e05\u9664\u6240\u6709\uff09</td></tr><tr><td><code>setAbility(abilities: (number | string)[])</code></td><td>\u8bbe\u7f6e\u5f53\u524d\u7528\u6237\u6743\u9650\u80fd\u529b\uff08\u4f1a\u5148\u6e05\u9664\u6240\u6709\uff09</td></tr><tr><td><code>add(value: <a data-toc="ACLType">ACLType</a>)</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u589e\u52a0\u89d2\u8272\u6216\u6743\u9650\u80fd\u529b</td></tr><tr><td><code>attachRole(roles: string[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u9644\u52a0\u89d2\u8272</td></tr><tr><td><code>attachAbility(abilities: (number | string)[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u9644\u52a0\u6743\u9650</td></tr><tr><td><code>removeRole(roles: string[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u79fb\u9664\u89d2\u8272</td></tr><tr><td><code>removeAbility(abilities: (number | string)[])</code></td><td>\u4e3a\u5f53\u524d\u7528\u6237\u79fb\u9664\u6743\u9650</td></tr><tr><td><code>can(roleOrAbility: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>\u5f53\u524d\u7528\u6237\u662f\u5426\u6709\u5bf9\u5e94\u89d2\u8272</td></tr><tr><td><code>canAbility(ability: <a data-toc="ACLCanType">ACLCanType</a>)</code></td><td>\u5f53\u524d\u7528\u6237\u662f\u5426\u6709\u5bf9\u5e94\u6743\u9650\u70b9</td></tr></tbody></table><h3 id="ACLCanType">ACLCanType<a onclick="window.location.hash = \'ACLCanType\'" class="anchor">#</a></h3><pre class="hljs language-ts"><code>type ACLCanType = number | number[] | string | string[] | ACLType</code></pre><h3 id="ACLType">ACLType<a onclick="window.location.hash = \'ACLType\'" class="anchor">#</a></h3><table><thead><tr><th>\u5c5e\u6027</th><th>\u7c7b\u578b</th><th>\u8bf4\u660e</th><th>\u9ed8\u8ba4</th></tr></thead><tbody><tr><td><code>[role]</code></td><td><code>string[]</code></td><td>\u89d2\u8272</td><td>-</td></tr><tr><td><code>[ability]</code></td><td><code>number[], string[]</code></td><td>\u6743\u9650\u70b9</td><td>-</td></tr><tr><td><code>[mode]</code></td><td><code>allOf, oneOf</code></td><td><code>allOf</code> \u8868\u793a\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u7b97\u6709\u6548<br><code>oneOf</code> \u8868\u793a\u53ea\u987b\u6ee1\u8db3\u89d2\u8272\u6216\u6743\u9650\u70b9\u6570\u7ec4\u4e2d\u7684\u4e00\u9879\u7b97\u6709\u6548</td><td><code>oneOf</code></td></tr><tr><td><code>[except]</code></td><td><code>boolean</code></td><td>\u662f\u5426\u53d6\u53cd\uff0c\u5373\u7ed3\u679c\u4e3a <code>true</code> \u65f6\u8868\u793a\u672a\u6388\u6743</td><td><code>false</code></td></tr></tbody></table>',meta:{order:1,title:"\u5f00\u59cb\u4f7f\u7528",type:"Documents"},toc:[{id:"\u5982\u4f55\u8fd0\u884c",title:"\u5982\u4f55\u8fd0\u884c",h:2},{id:"\u5982\u4f55\u4f7f\u7528",title:"\u5982\u4f55\u4f7f\u7528",h:2},{id:"API",title:"API",h:2},{id:"\u53c2\u6570",title:"\u53c2\u6570",h:3},{id:"ACLService",title:"ACLService",h:3},{id:"ACLCanType",title:"ACLCanType",h:3},{id:"ACLType",title:"ACLType",h:3}]}},demo:!1},this.codes=[]},c=function t(){_classCallCheck(this,t),this.item={cols:1,urls:{"en-US":"packages/acl/docs/guard.en-US.md","zh-CN":"packages/acl/docs/guard.zh-CN.md"},content:{"en-US":{content:"<section class=\"markdown\"><article><h2 id=\"Foreword\">Foreword<a onclick=\"window.location.hash = 'Foreword'\" class=\"anchor\">#</a></h2><p>Routing guard prevent unauthorized users visit the page.</p><p><code>@delon/acl</code> implements the generic guard class <code>ACLGuard</code>, which allows for complex operations through simple configuration in route registration, and supports the <code>Observable</code> type.</p><p>Use the fixed attribute <code>guard</code> to specify the <code>ACLCanType</code> parameter value, for example:</p><pre class=\"hljs language-ts\"><code>const routes: Routes = [\n  {\n    path: 'auth',\n    canActivate: [ ACLGuard ],\n    data: { guard: 'user1' }\n  },\n  {\n    path: 'auth',\n    canActivate: [ ACLGuard ],\n    data: {\n      guard: <ACLType>{\n        role: [ 'user1' ],\n        ability: [ 10, 'USER-EDIT' ],\n        mode: 'allOf'\n      },\n      guard_url: '/no-permisseion'\n    }\n  },\n]</code></pre><blockquote><p>The value of <code>guard</code> must match the value of <a href=\"/acl/api#ACLCanType\" data-url=\"/acl/api#ACLCanType\">ACLCanType</a>.</p></blockquote><h2 id=\"DEMO\">DEMO<a onclick=\"window.location.hash = 'DEMO'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { of } from 'rxjs';\nimport { ACLGuard } from '@delon/acl';\nconst routes: Routes = [\n  {\n    path: 'guard',\n    component: GuardComponent,\n    children: [\n      { path: 'auth', component: GuardAuthComponent, canActivate: [ ACLGuard ], data: { guard: 'user1' } },\n      { path: 'admin', component: GuardAdminComponent, canActivate: [ ACLGuard ], data: { guard: 'admin' } }\n    ],\n    canActivateChild: [ ACLGuard ],\n    data: { guard: <ACLType>{ role: [ 'user1' ], ability: [ 10, 'USER-EDIT' ], mode: 'allOf' } }\n  },\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ ACLGuard ], data: { guard: 1 } },\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ ACLGuard ], data: { guard: of(false).pipe(map(v => 'admin')) } }\n];</code></pre></article></section>",meta:{order:3,title:"Guard",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"DEMO",title:"DEMO",h:2}]},"zh-CN":{content:"<section class=\"markdown\"><article><h2 id=\"\u5199\u5728\u524d\u9762\">\u5199\u5728\u524d\u9762<a onclick=\"window.location.hash = '\u5199\u5728\u524d\u9762'\" class=\"anchor\">#</a></h2><p>\u8def\u7531\u5b88\u536b\u53ef\u4ee5\u9632\u6b62\u672a\u6388\u6743\u7528\u6237\u8bbf\u95ee\u9875\u9762\u3002</p><p>\u8def\u7531\u5b88\u536b\u9700\u8981\u5355\u72ec\u5bf9\u6bcf\u4e00\u4e2a\u8def\u7531\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5f88\u591a\u65f6\u5019\u8fd9\u770b\u8d77\u6765\u5f88\u7e41\u7410\uff0c<code>@delon/acl</code> \u5b9e\u73b0\u4e86\u901a\u7528\u5b88\u536b\u7c7b <code>ACLGuard</code>\uff0c\u53ef\u4ee5\u5728\u8def\u7531\u6ce8\u518c\u65f6\u900f\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5b8c\u6210\u4e00\u4e9b\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u751a\u81f3\u652f\u6301 <code>Observable</code> \u7c7b\u578b\u3002</p><p>\u4f7f\u7528\u56fa\u5b9a\u5c5e\u6027 <code>guard</code> \u6765\u6307\u5b9a <code>ACLCanType</code> \u53c2\u6570\uff0c\u4f8b\u5982\uff1a</p><pre class=\"hljs language-ts\"><code>const routes: Routes = [\n  {\n    path: 'auth',\n    canActivate: [ ACLGuard ],\n    data: { guard: 'user1' }\n  },\n  {\n    path: 'auth',\n    canActivate: [ ACLGuard ],\n    data: {\n      guard: <ACLType>{\n        role: [ 'user1' ],\n        ability: [ 10, 'USER-EDIT' ],\n        mode: 'allOf'\n      },\n      guard_url: '/no-permisseion'\n    }\n  },\n]</code></pre><blockquote><p><code>guard</code> \u7684\u503c\u5fc5\u987b\u7b26\u5408 <a href=\"/acl/getting-started#ACLCanType\" data-url=\"/acl/getting-started#ACLCanType\">ACLCanType</a> \u7c7b\u578b\u503c\u3002</p></blockquote><h2 id=\"\u793a\u4f8b\">\u793a\u4f8b<a onclick=\"window.location.hash = '\u793a\u4f8b'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { of } from 'rxjs';\nimport { ACLGuard } from '@delon/acl';\nconst routes: Routes = [\n  {\n    path: 'guard',\n    component: GuardComponent,\n    children: [\n      // \u89d2\u8272\u9650\u5b9a\n      { path: 'auth', component: GuardAuthComponent, canActivate: [ ACLGuard ], data: { guard: 'user1' } },\n      { path: 'admin', component: GuardAdminComponent, canActivate: [ ACLGuard ], data: { guard: 'admin' } }\n    ],\n    // \u6240\u6709\u5b50\u8def\u7531\u6709\u6548\n    canActivateChild: [ ACLGuard ],\n    data: { guard: <ACLType>{ role: [ 'user1' ], ability: [ 10, 'USER-EDIT' ], mode: 'allOf' } }\n  },\n  // \u6743\u9650\u70b9\u9650\u5b9a\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ ACLGuard ], data: { guard: 1 } },\n  // \u6216\u4f7f\u7528Observable\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u884c\u4e3a\n  { path: 'pro', loadChildren: './pro/pro.module#ProModule', canLoad: [ ACLGuard ], data: { guard: of(false).pipe(map(v => 'admin')) } }\n];</code></pre></article></section>",meta:{order:3,title:"\u8def\u7531\u5b88\u536b",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"\u793a\u4f8b",title:"\u793a\u4f8b",h:2}]}},demo:!1},this.codes=[]},r=function t(){_classCallCheck(this,t)},i=a("pMnS"),s=a("Ed4d"),u=a("QfCi"),h=a("R6D3"),p=a("WP5L"),b=a("71F0"),g=a("fE+l"),m=a("0RMT"),f=a("QcbP"),C=a("0D9X"),O=a("SpJI"),A=a("hBP+"),y=a("QPFe"),L=a("RdGh"),T=a("D9vs"),w=a("DyZ0"),v=a("TY3c"),I=a("u+Cy"),k=a("8+8K"),z=a("YVZs"),S=a("F/j7"),D=a("/EOF"),R=a("ZKYL"),M=a("SZk1"),P=a("5eO6"),j=a("CghO"),E=a("EdU/"),x=a("JRKe"),N=a("Sq/J"),G=a("/Yna"),U=a("9BMt"),F=a("kRch"),B=a("QkPN"),Y=a("vBNu"),_=a("Z7t+"),q=a("II6v"),J=a("MRB6"),Q=a("uU7u"),W=a("iInd"),Z=a("cUpR"),V=n.zb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function K(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,1,"app-docs",[],null,null,null,_.b,_.a)),n.Ab(1,245760,null,0,q.a,[J.a,Q.a,W.n,Z.b],{codes:[0,"codes"],item:[1,"item"]},null)],(function(t,e){var a=e.component;t(e,1,0,a.codes,a.item)}),null)}var H=n.xb("app-acl-control",o,(function(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,1,"app-acl-control",[],null,null,null,K,V)),n.Ab(1,49152,null,0,o,[],null,null)],null,null)}),{},{},[]),X=n.zb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function $(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,1,"app-docs",[],null,null,null,_.b,_.a)),n.Ab(1,245760,null,0,q.a,[J.a,Q.a,W.n,Z.b],{codes:[0,"codes"],item:[1,"item"]},null)],(function(t,e){var a=e.component;t(e,1,0,a.codes,a.item)}),null)}var tt=n.xb("app-acl-getting-started",d,(function(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,1,"app-acl-getting-started",[],null,null,null,$,X)),n.Ab(1,49152,null,0,d,[],null,null)],null,null)}),{},{},[]),et=n.zb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function at(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,1,"app-docs",[],null,null,null,_.b,_.a)),n.Ab(1,245760,null,0,q.a,[J.a,Q.a,W.n,Z.b],{codes:[0,"codes"],item:[1,"item"]},null)],(function(t,e){var a=e.component;t(e,1,0,a.codes,a.item)}),null)}var nt=n.xb("app-acl-guard",c,(function(t){return n.dc(0,[(t()(),n.Bb(0,0,null,null,1,"app-acl-guard",[],null,null,null,at,et)),n.Ab(1,49152,null,0,c,[],null,null)],null,null)}),{},{},[]),lt=a("SVse"),ot=a("s7LF"),dt=a("1O3W"),ct=a("9gLZ"),rt=a("sAdM"),it=a("ekcc"),st=a("9b/N"),ut=a("NFMk"),ht=a("pQl/"),pt=a("f/Zj"),bt=a("vZwM"),gt=a("g+Fz"),mt=a("Ybye"),ft=a("10Ig"),Ct=a("iC8E"),Ot=a("1z/I"),At=a("SCoL"),yt=a("7KAL"),Lt=a("Rgb0"),Tt=a("+YBk"),wt=a("9J0+"),vt=a("66zS"),It=a("vIiB"),kt=a("dZIx"),zt=a("PgQK"),St=a("W0Pu"),Dt=a("px0D"),Rt=a("r19J"),Mt=a("Jp/u"),Pt=a("WJhm"),jt=a("GaVp"),Et=a("YdS3"),xt=a("mW00"),Nt=a("JidZ"),Gt=a("jQCg"),Ut=a("3ZFI"),Ft=a("YEUz"),Bt=a("CYS+"),Yt=a("YRt3"),_t=a("lAiz"),qt=a("HeVh"),Jt=a("tYkK"),Qt=a("wf2+"),Wt=a("eCGT"),Zt=a("JK0T"),Vt=a("Rki0"),Kt=a("kS4m"),Ht=a("W4B1"),Xt=a("NDed"),$t=a("jTf7"),te=a("ozKM"),ee=a("DQmg"),ae=a("XFzh"),ne=a("HhpN"),le=a("SN7N"),oe=a("fwnu"),de=a("RVNi"),ce=a("gaRz"),re=a("XYAa"),ie=a("sbFH"),se=a("anqq"),ue=a("EWQH"),he=a("YQXl"),pe=a("k5cy"),be=a("hS58"),ge=a("aq9g"),me=a("SHEi"),fe=a("/L1H"),Ce=a("phDe"),Oe=a("vZsH"),Ae=a("fb/r"),ye=a("haRT"),Le=a("EcpC"),Te=a("SBNi"),we=a("1Cev"),ve=a("2bDw"),Ie=a("Ogil"),ke=a("34DM"),ze=a("+ndR"),Se=a("G1y0"),De=a("MNSj"),Re=a("CGSU"),Me=a("ekmu"),Pe=a("5CFV"),je=a("7Dpl"),Ee=a("v1Dh"),xe=a("N2O2"),Ne=a("rJp6"),Ge=a("l/Xz"),Ue=a("sRo1"),Fe=a("BQzg"),Be=a("zTFG"),Ye=a("1+nf"),_e=a("vjj7"),qe=a("ev4S"),Je=a("GTZx"),Qe=a("vrge"),We=a("nMAq"),Ze=a("5PV9"),Ve=a("nIn3"),Ke=a("xo13"),He=a("CnVV"),Xe=a("5p8d"),$e=a("qYUw"),ta=a("JpOc"),ea=a("ye40"),aa=a("VRoF"),na=a("Uto7"),la=a("/p+U"),oa=a("qcxY"),da=a("T+Em"),ca=a("WNQ9"),ra=a("pv0S"),ia=a("JXeA"),sa=a("IYs4"),ua=a("wQFA"),ha=a("FPpa"),pa=a("5Izy"),ba=a("z+yo"),ga=a("76lH"),ma=a("TSSN"),fa=a("Fg/6"),Ca=a("kzz5"),Oa=a("YgDb"),Aa=a("Wl7g"),ya=a("+TYD"),La=a("PCNd"),Ta=n.yb(r,[],(function(t){return n.Nb([n.Ob(512,n.j,n.bb,[[8,[i.a,s.b,s.a,u.a,h.a,p.a,b.a,g.a,m.a,f.a,C.a,O.a,A.a,y.a,L.a,T.a,w.a,v.a,I.a,k.a,z.a,S.a,D.a,R.a,M.a,P.a,j.a,E.a,x.a,N.a,G.a,U.a,F.a,B.a,Y.a,H,tt,nt]],[3,n.j],n.x]),n.Ob(4608,lt.p,lt.o,[n.u]),n.Ob(4608,ot.x,ot.x,[]),n.Ob(4608,ot.e,ot.e,[]),n.Ob(4608,dt.d,dt.d,[dt.k,dt.f,n.j,dt.i,dt.g,n.r,n.z,lt.e,ct.b,[2,lt.j]]),n.Ob(5120,dt.l,dt.m,[dt.d]),n.Ob(5120,rt.b,rt.a,[[3,rt.b],it.a]),n.Ob(4608,st.c,st.c,[]),n.Ob(135680,ut.i,ut.i,[dt.d,n.r,[3,ut.i]]),n.Ob(4608,ht.d,ht.d,[n.z]),n.Ob(4608,pt.c,pt.c,[]),n.Ob(5120,bt.e,bt.g,[lt.e,[3,bt.e]]),n.Ob(4608,gt.d,gt.d,[lt.e]),n.Ob(4608,mt.a,mt.a,[ut.i]),n.Ob(4608,ft.a,ft.a,[Ct.d]),n.Ob(1073742336,lt.c,lt.c,[]),n.Ob(1073742336,ot.w,ot.w,[]),n.Ob(1073742336,ot.j,ot.j,[]),n.Ob(1073742336,W.r,W.r,[[2,W.w],[2,W.n]]),n.Ob(1073742336,ot.t,ot.t,[]),n.Ob(1073742336,ct.a,ct.a,[]),n.Ob(1073742336,Ot.f,Ot.f,[]),n.Ob(1073742336,At.b,At.b,[]),n.Ob(1073742336,yt.c,yt.c,[]),n.Ob(1073742336,yt.g,yt.g,[]),n.Ob(1073742336,dt.h,dt.h,[]),n.Ob(1073742336,Lt.b,Lt.b,[]),n.Ob(1073742336,Tt.a,Tt.a,[]),n.Ob(1073742336,wt.a,wt.a,[vt.d]),n.Ob(1073742336,It.a,It.a,[]),n.Ob(1073742336,kt.a,kt.a,[]),n.Ob(1073742336,zt.a,zt.a,[]),n.Ob(1073742336,St.b,St.b,[]),n.Ob(1073742336,vt.b,vt.b,[]),n.Ob(1073742336,Dt.f,Dt.f,[]),n.Ob(1073742336,Rt.b,Rt.b,[]),n.Ob(1073742336,Mt.c,Mt.c,[]),n.Ob(1073742336,Pt.b,Pt.b,[]),n.Ob(1073742336,jt.c,jt.c,[]),n.Ob(1073742336,Et.d,Et.d,[]),n.Ob(1073742336,xt.d,xt.d,[]),n.Ob(1073742336,Nt.a,Nt.a,[]),n.Ob(1073742336,Gt.f,Gt.f,[]),n.Ob(1073742336,Ut.b,Ut.b,[]),n.Ob(1073742336,st.d,st.d,[]),n.Ob(1073742336,Ft.a,Ft.a,[Ft.d]),n.Ob(1073742336,Bt.c,Bt.c,[]),n.Ob(1073742336,Yt.b,Yt.b,[]),n.Ob(1073742336,_t.a,_t.a,[]),n.Ob(1073742336,_t.c,_t.c,[]),n.Ob(1073742336,qt.b,qt.b,[]),n.Ob(1073742336,Jt.b,Jt.b,[]),n.Ob(1073742336,Qt.e,Qt.e,[]),n.Ob(1073742336,Wt.b,Wt.b,[]),n.Ob(1073742336,Zt.b,Zt.b,[]),n.Ob(1073742336,Vt.a,Vt.a,[]),n.Ob(1073742336,ut.g,ut.g,[]),n.Ob(1073742336,Kt.d,Kt.d,[]),n.Ob(1073742336,Ht.b,Ht.b,[]),n.Ob(1073742336,Xt.c,Xt.c,[]),n.Ob(1073742336,$t.j,$t.j,[]),n.Ob(1073742336,te.b,te.b,[]),n.Ob(1073742336,ee.b,ee.b,[]),n.Ob(1073742336,ae.b,ae.b,[]),n.Ob(1073742336,ne.c,ne.c,[]),n.Ob(1073742336,le.c,le.c,[]),n.Ob(1073742336,oe.b,oe.b,[]),n.Ob(1073742336,de.b,de.b,[]),n.Ob(1073742336,ce.d,ce.d,[]),n.Ob(1073742336,re.a,re.a,[]),n.Ob(1073742336,ie.a,ie.a,[]),n.Ob(1073742336,se.b,se.b,[]),n.Ob(1073742336,ue.a,ue.a,[]),n.Ob(1073742336,ht.c,ht.c,[]),n.Ob(1073742336,he.a,he.a,[]),n.Ob(1073742336,pe.a,pe.a,[]),n.Ob(1073742336,be.a,be.a,[]),n.Ob(1073742336,ge.a,ge.a,[]),n.Ob(1073742336,me.c,me.c,[]),n.Ob(1073742336,fe.j,fe.j,[]),n.Ob(1073742336,Ce.a,Ce.a,[]),n.Ob(1073742336,Ce.d,Ce.d,[]),n.Ob(1073742336,Oe.d,Oe.d,[]),n.Ob(1073742336,pt.b,pt.b,[]),n.Ob(1073742336,Ae.b,Ae.b,[]),n.Ob(1073742336,ye.m,ye.m,[]),n.Ob(1073742336,Le.b,Le.b,[]),n.Ob(1073742336,Te.b,Te.b,[]),n.Ob(1073742336,we.a,we.a,[]),n.Ob(1073742336,ve.a,ve.a,[]),n.Ob(1073742336,Ie.a,Ie.a,[]),n.Ob(1073742336,ke.a,ke.a,[]),n.Ob(1073742336,ze.a,ze.a,[]),n.Ob(1073742336,Se.a,Se.a,[]),n.Ob(1073742336,De.a,De.a,[]),n.Ob(1073742336,Re.a,Re.a,[]),n.Ob(1073742336,Me.a,Me.a,[]),n.Ob(1073742336,Pe.a,Pe.a,[]),n.Ob(1073742336,je.a,je.a,[]),n.Ob(1073742336,Ee.b,Ee.b,[]),n.Ob(1073742336,xe.f,xe.f,[]),n.Ob(1073742336,Ne.c,Ne.c,[]),n.Ob(1073742336,Ge.a,Ge.a,[]),n.Ob(1073742336,Ue.a,Ue.a,[]),n.Ob(1073742336,Fe.a,Fe.a,[]),n.Ob(1073742336,Be.m,Be.m,[]),n.Ob(1073742336,Ye.f,Ye.f,[]),n.Ob(1073742336,_e.a,_e.a,[]),n.Ob(1073742336,qe.a,qe.a,[]),n.Ob(1073742336,Je.a,Je.a,[]),n.Ob(1073742336,Qe.a,Qe.a,[]),n.Ob(1073742336,We.a,We.a,[]),n.Ob(1073742336,Ze.a,Ze.a,[]),n.Ob(1073742336,Ve.a,Ve.a,[]),n.Ob(1073742336,Ke.a,Ke.a,[]),n.Ob(1073742336,He.a,He.a,[]),n.Ob(1073742336,Xe.a,Xe.a,[]),n.Ob(1073742336,$e.a,$e.a,[]),n.Ob(1073742336,ta.a,ta.a,[]),n.Ob(1073742336,ea.a,ea.a,[]),n.Ob(1073742336,aa.a,aa.a,[]),n.Ob(1073742336,na.a,na.a,[]),n.Ob(1073742336,la.a,la.a,[]),n.Ob(1073742336,oa.a,oa.a,[]),n.Ob(1073742336,da.a,da.a,[]),n.Ob(1073742336,ca.a,ca.a,[]),n.Ob(1073742336,ra.a,ra.a,[]),n.Ob(1073742336,ia.e,ia.e,[]),n.Ob(1073742336,ia.c,ia.c,[]),n.Ob(1073742336,sa.b,sa.b,[]),n.Ob(1073742336,ua.d,ua.d,[]),n.Ob(1073742336,ha.c,ha.c,[]),n.Ob(1073742336,pa.b,pa.b,[]),n.Ob(1073742336,Ct.e,Ct.e,[]),n.Ob(1073742336,Ct.b,Ct.b,[]),n.Ob(1073742336,ba.c,ba.c,[]),n.Ob(1073742336,ga.a,ga.a,[]),n.Ob(1073742336,ma.i,ma.i,[]),n.Ob(1073742336,fa.b,fa.b,[]),n.Ob(1073742336,Ca.a,Ca.a,[]),n.Ob(1073742336,gt.c,gt.c,[]),n.Ob(1073742336,Oa.c,Oa.c,[]),n.Ob(1073742336,Aa.d,Aa.d,[]),n.Ob(1073742336,Aa.h,Aa.h,[]),n.Ob(1073742336,Aa.b,Aa.b,[]),n.Ob(1073742336,Aa.j,Aa.j,[]),n.Ob(1073742336,Aa.l,Aa.l,[]),n.Ob(1073742336,Aa.p,Aa.p,[]),n.Ob(1073742336,Aa.t,Aa.t,[]),n.Ob(1073742336,ya.a,ya.a,[]),n.Ob(1073742336,La.a,La.a,[]),n.Ob(1073742336,r,r,[]),n.Ob(256,it.a,Tt.b,[]),n.Ob(1024,W.l,(function(){return[[{path:"",component:l.a,children:[{path:"",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"control",redirectTo:"control/zh",pathMatch:"full"},{path:"control/:lang",component:o},{path:"getting-started",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started/:lang",component:d},{path:"guard",redirectTo:"guard/zh",pathMatch:"full"},{path:"guard/:lang",component:c}]}]]}),[])])}))}}]);