function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{RTYZ:function(e,t,o){"use strict";o.r(t),o.d(t,"MockModuleNgFactory",(function(){return Mo}));var a=o("8Y7J"),d=o("0qEG"),c=function e(){_classCallCheck(this,e),this.item={cols:1,urls:{"en-US":"packages/mock/docs/getting-started.en-US.md","zh-CN":"packages/mock/docs/getting-started.zh-CN.md"},content:{"en-US":{content:'<section class="markdown"><h2 id="Foreword">Foreword<a onclick="window.location.hash = \'Foreword\'" class="anchor">#</a></h2><p><code>@delon/mock</code> is a simulation data generator to help the front-end to develop and prototype separate from the back-end progress and reduce some monotony particularly while writing automated tests.</p><p><strong>Features</strong></p><ul><li><p>All of the Angular projects</p></li><li><p>Unobtrusive</p></li><li><p>Simple usage</p></li><li><p>Support <a target="_blank" href="http://mockjs.com/" data-url="http://mockjs.com/">mock.js</a></p></li></ul><h2 id="Usage">Usage<a onclick="window.location.hash = \'Usage\'" class="anchor">#</a></h2><p>Install <code>@delon/mock</code> from <code>yarn</code>.</p><pre class="hljs language-bash"><code>yarn add @delon/mock -D</code></pre><p>Please refer to <a target="_blank" href="https://github.com/ng-alain/ng-alain/blob/master/src/app/global-config.module.ts#L26-L30" data-url="https://github.com/ng-alain/ng-alain/blob/master/src/app/global-config.module.ts#L26-L30">global-config.module.ts</a> import the <a href="/mock/rule" data-url="/mock/rule">Mock Rule data</a>.</p><h3 id="MockOptions">MockOptions<a onclick="window.location.hash = \'MockOptions\'" class="anchor">#</a></h3><blockquote><p>You can override them via <a href="/docs/global-config" data-url="/docs/global-config">Global Configuration</a>.</p></blockquote><table><thead><tr><th>Property</th><th>Description</th><th>Type</th><th>Default</th><th>Global Config</th></tr></thead><tbody><tr><td><code>[data]</code></td><td><code>any</code></td><td>-</td><td>Mock data rule</td><td>\u2705</td></tr><tr><td><code>[delay]</code></td><td><code>number</code></td><td><code>300</code></td><td>Request delay, unit is milliseconds</td><td>\u2705</td></tr><tr><td><code>[force]</code></td><td><code>boolean</code></td><td><code>false</code></td><td>Whether to force all requests to Mock, <code>true</code> means to return a 404 error directly when the requested URL does not exist, <code>false</code> means to send a real HTTP request when the request is missed</td><td>\u2705</td></tr><tr><td><code>[log]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>Whether to print Mock request information, make up for the browser without Network information; it will output <span>\ud83d\udc7dMock</span> when hit</td><td>\u2705</td></tr><tr><td><code>[executeOtherInterceptors]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>Whether continue to call other interceptor <code>intercept</code> method after mock rule hit</td><td>\u2705</td></tr><tr><td><code>[copy]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>Whether to return copy data</td><td>\u2705</td></tr></tbody></table><blockquote><p><strong>Lazy modules</strong> need to import <code>forChild</code>, You can import <code>forChild</code> in the <code>SharedModule</code>.</p></blockquote></section>',meta:{order:1,title:"Getting Started",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Usage",title:"Usage",h:2},{id:"MockOptions",title:"MockOptions",h:3}]},"zh-CN":{content:'<section class="markdown"><h2 id="\u5199\u5728\u524d\u9762">\u5199\u5728\u524d\u9762<a onclick="window.location.hash = \'\u5199\u5728\u524d\u9762\'" class="anchor">#</a></h2><p>Mock \u662f\u6307\u901a\u8fc7\u751f\u6210\u6a21\u62df\u6570\u636e\u8ba9\u524d\u7aef\u5f00\u53d1\u4eba\u5458\u72ec\u7acb\u4e8e\u540e\u7aef\u8fdb\u884c\u5f00\u53d1\uff0c\u6709\u65f6\u6211\u4eec\u4e5f\u4f1a\u8fd0\u7528\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u3002</p><p><code>@delon/mock</code> \u662f\u4e00\u4e2a\u7b80\u5355 Mock \u529f\u80fd\uff0c\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u7279\u5f81\uff1a</p><ul><li><p>\u4efb\u610f Angular \u9879\u76ee</p></li><li><p>\u5f00\u53d1\u65e0\u4fb5\u5165</p></li><li><p>\u8d85\u7b80\u5355\u7528\u6cd5</p></li><li><p>\u652f\u6301 <a target="_blank" href="http://mockjs.com/" data-url="http://mockjs.com/">mock.js</a></p></li></ul><h2 id="\u5982\u4f55\u4f7f\u7528">\u5982\u4f55\u4f7f\u7528<a onclick="window.location.hash = \'\u5982\u4f55\u4f7f\u7528\'" class="anchor">#</a></h2><p>\u5b89\u88c5 <code>@delon/mock</code> \u4f9d\u8d56\u5305\uff1a</p><pre class="hljs language-bash"><code>yarn add @delon/mock -D</code></pre><p>\u53c2\u8003 <a target="_blank" href="https://github.com/ng-alain/ng-alain/blob/master/src/app/global-config.module.ts#L26-L30" data-url="https://github.com/ng-alain/ng-alain/blob/master/src/app/global-config.module.ts#L26-L30">global-config.module.ts</a> \u5bfc\u5165<a href="/mock/rule" data-url="/mock/rule">Mock \u89c4\u5219\u6570\u636e</a>\u3002</p><h3 id="MockOptions-\u914d\u7f6e">MockOptions \u914d\u7f6e<a onclick="window.location.hash = \'MockOptions-\u914d\u7f6e\'" class="anchor">#</a></h3><blockquote><p>\u53ef\u4ee5\u901a\u8fc7<a href="/docs/global-config" data-url="/docs/global-config">\u5168\u5c40\u914d\u7f6e</a>\u8986\u76d6\u5b83\u4eec\u3002</p></blockquote><table><thead><tr><th>\u6210\u5458</th><th>\u8bf4\u660e</th><th>\u7c7b\u578b</th><th>\u9ed8\u8ba4\u503c</th><th>\u5168\u5c40\u914d\u7f6e</th></tr></thead><tbody><tr><td><code>[data]</code></td><td><code>any</code></td><td>-</td><td>Mock \u6570\u636e\u89c4\u5219</td><td>\u2705</td></tr><tr><td><code>[delay]</code></td><td><code>number</code></td><td><code>300</code></td><td>\u8bf7\u6c42\u5ef6\u8fdf\uff0c\u5355\u4f4d\uff1a\u6beb\u79d2</td><td>\u2705</td></tr><tr><td><code>[force]</code></td><td><code>boolean</code></td><td><code>false</code></td><td>\u662f\u5426\u5f3a\u5236\u6240\u6709\u8bf7\u6c42\u90fdMock\uff0c<code>true</code> \u8868\u793a\u5f53\u8bf7\u6c42\u7684URL\u4e0d\u5b58\u5728\u65f6\u76f4\u63a5\u8fd4\u56de 404 \u9519\u8bef\uff0c<code>false</code> \u8868\u793a\u672a\u547d\u4e2d\u65f6\u53d1\u9001\u771f\u5b9eHTTP\u8bf7\u6c42</td><td>\u2705</td></tr><tr><td><code>[log]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>\u662f\u5426\u6253\u5370 Mock \u8bf7\u6c42\u4fe1\u606f\uff0c\u5f25\u8865\u6d4f\u89c8\u5668\u65e0Network\u4fe1\u606f\uff1b\u5f53\u8bf7\u6c42\u7ecf\u8fc7 Mock \u4f1a\u63a5\u6536\u3010\ud83d\udc7dMock\u3011</td><td>\u2705</td></tr><tr><td><code>[executeOtherInterceptors]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>\u662f\u5426\u62e6\u622a\u547d\u4e2d\u540e\u7ee7\u7eed\u8c03\u7528\u540e\u7eed\u62e6\u622a\u5668\u7684 <code>intercept</code> \u65b9\u6cd5</td><td>\u2705</td></tr><tr><td><code>[copy]</code></td><td><code>boolean</code></td><td><code>true</code></td><td>\u662f\u5426\u8fd4\u56de\u526f\u672c\u6570\u636e</td><td>\u2705</td></tr></tbody></table><blockquote><p>\u82e5<strong>\u61d2\u6a21\u5757</strong>\u8fd8\u9700\u8981\u5bfc\u5165 <code>forChild</code> \u786e\u4fddHTTP\u62e6\u622a\u5668\u6709\u6548\uff0c\u4e00\u822c\u53ef\u4ee5\u76f4\u63a5\u5728 SharedModule \u76f4\u63a5\u4f7f\u7528 <code>forChild</code>\u3002</p></blockquote><h3 id="\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f">\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f<a onclick="window.location.hash = \'\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f\'" class="anchor">#</a></h3><p>Mock \u5e76\u975e\u662f\u771f\u5b9e\u6570\u636e\uff0c\u5927\u90e8\u5206\u573a\u666f\u662f\u9488\u5bf9\u5f00\u53d1\u672c\u5730\u6216\u6d4b\u8bd5\u73af\u5883\uff1b\u6240\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4e0d\u5e94\u8be5\u5305\u62ec Mock \u6a21\u5757\u4ee5\u53ca\u89c4\u5219\u6570\u636e\u3002\u56e0\u6b64\u4e0a\u8ff0\u624d\u4f1a\u6839\u636e <code>!environment.production</code> \u4f9d\u636e\u73af\u5883\u6765\u51b3\u5b9a\u662f\u5426\u52a0\u8f7d <code>DelonMockModule</code>\u3002</p><p>\u5f53\u7136\uff0c\u4f60\u4f9d\u7136\u53ef\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u4e5f\u4f7f\u7528\u8fd9\u79cd\u89c4\u5219\uff0c\u5c31\u50cf //ng-alain.github.io/ng-alain/ \u4e00\u6837\uff0c\u9700\u8981\u4e00\u4e9b\u6a21\u62df\u8bf7\u6c42\u6765\u4fdd\u8bc1\u73af\u5883\u7684\u8fd0\u884c\u3002</p><pre class="hljs language-ts"><code>import { DelonMockModule } from \'@delon/mock\';\nimport * as MOCKDATA from \'../../_mock\';\n@NgModule({\n  imports: [\n    DelonMockModule.forRoot({ data: MOCKDATA })\n  ]\n})</code></pre></section>',meta:{order:1,title:"\u5f00\u59cb\u4f7f\u7528",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"\u5982\u4f55\u4f7f\u7528",title:"\u5982\u4f55\u4f7f\u7528",h:2},{id:"MockOptions-\u914d\u7f6e",title:"MockOptions \u914d\u7f6e",h:3},{id:"\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f",title:"\u4e3a\u4ec0\u4e48\u53ea\u5bf9\u5f00\u53d1\u73af\u5883\u6709\u6548\uff1f",h:3}]}},demo:!1},this.codes=[]},n=function e(){_classCallCheck(this,e),this.item={cols:1,urls:{"en-US":"packages/mock/docs/rule.en-US.md","zh-CN":"packages/mock/docs/rule.zh-CN.md"},content:{"en-US":{content:"<section class=\"markdown\"><h2 id=\"Foreword\">Foreword<a onclick=\"window.location.hash = 'Foreword'\" class=\"anchor\">#</a></h2><p>The Mock rule data is an <code>Object</code> object, Key is request declaration, and Value is response data, for example:</p><pre class=\"hljs language-ts\"><code>export const USERS = {\n  'GET /users': { users: [1, 2], total: 2 },\n}</code></pre><p>When send requesting <code>/users</code> via <code>HttpClient</code>, it will directly response <code>{ users: [1, 2], total: 2 }</code>, and will not send any HTTP requests in <code>Network</code> panel.</p><h2 id=\"Key\">Key<a onclick=\"window.location.hash = 'Key'\" class=\"anchor\">#</a></h2><p>Use <code>' '</code>space to separate the request method and URL, the request method can be ignored, the default is <code>GET</code>; the URL supports routing parameters and regular expressions. E.g:</p><pre class=\"hljs language-ts\"><code>export const USERS = {\n  'GET /users': null,\n  // GET: can be ingored\n  '/users/1': null,\n  // POST\n  'POST /users/1': null,\n  // Routing parameters\n  '/users/:id': null,\n  // Regular expressions need to be wrapped with `()`\n  '/data/(.*)': null\n};</code></pre><h2 id=\"Value\">Value<a onclick=\"window.location.hash = 'Value'\" class=\"anchor\">#</a></h2><p>Supports three types: <code>Object</code>, <code>Array</code>, <code>(req: MockRequest) => any</code>.</p><pre class=\"hljs language-ts\"><code>import { MockStatusError } from '@delon/mock';\n\nexport const USERS = {\n  // Array\n  '/users': [ { uid: 1 }, { uid: 2 } ],\n  // Object\n  '/users': { uid: 1 },\n  // Function\n  '/qs': (req: MockRequest) => req.queryString.pi,\n  // Support HttpResponse\n  '/http': (req: MockRequest) => new HttpResponse({ body: 'Body', headers: new HttpHeaders({ 'token': '1' }) }),\n  // Send Status Error\n  '/404': () => { throw new MockStatusError(404); }\n};</code></pre><h3 id=\"MockRequest\">MockRequest<a onclick=\"window.location.hash = 'MockRequest'\" class=\"anchor\">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>[params]</code></td><td><code>any</code></td><td>Routing parameter, <code>/:id</code> then <code>params.id</code></td></tr><tr><td><code>[queryString]</code></td><td><code>any</code></td><td>URL parameter, <code>/users?pi=1&ps=10</code> then <code>queryString.pi</code>, <code>queryString.ps</code></td></tr><tr><td><code>[headers]</code></td><td><code>any</code></td><td>Headers</td></tr><tr><td><code>[body]</code></td><td><code>any</code></td><td>Body</td></tr><tr><td><code>[original]</code></td><td><code>HttpRequest&lt;any></code></td><td><code>HttpRequest</code></td></tr></tbody></table><h3 id=\"MockStatusError\">MockStatusError<a onclick=\"window.location.hash = 'MockStatusError'\" class=\"anchor\">#</a></h3><p>When you want to respond to a <code>404</code> http status.</p><h2 id=\"Demo\">Demo<a onclick=\"window.location.hash = 'Demo'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { MockStatusError } from '@delon/mock';\n\nexport const USERS = {\n  // Support object or array values\n  'GET /users': { users: [1, 2], total: 2 },\n  // GET: can be ingored\n  '/users/1': { users: [1, 2], total: 2 },\n  // POST\n  'POST /users/1': { uid: 1 },\n  // Get request parameters: queryString\u3001headers\u3001body\n  '/qs': (req: MockRequest) => req.queryString.pi,\n  // Routing parameters\n  '/users/:id': (req: MockRequest) => req.params, // /users/100, output: { id: 100 }\n  // Send Status Error\n  '/404': () => { throw new MockStatusError(404); },\n  // Regular expressions need to be wrapped with `()`\n  '/data/(.*)': (req: MockRequest) => req\n};</code></pre><h2 id=\"Storage-rule\">Storage rule<a onclick=\"window.location.hash = 'Storage-rule'\" class=\"anchor\">#</a></h2><p>In general, Mock is required during development, so recommended to create <code>_mock</code> directory in the project root directory and create <code>index.ts</code> file to export all data rules. See <a href=\"Https://github.com/ng-alain/ng-alain/tree/master/_mock\" data-url=\"Https://github.com/ng-alain/ng-alain/tree/master/_mock\">ng-alain/_mock</a>.</p></section>",meta:{order:2,title:"Rule Data",type:"Documents"},toc:[{id:"Foreword",title:"Foreword",h:2},{id:"Key",title:"Key",h:2},{id:"Value",title:"Value",h:2},{id:"MockRequest",title:"MockRequest",h:3},{id:"MockStatusError",title:"MockStatusError",h:3},{id:"Demo",title:"Demo",h:2},{id:"Storage-rule",title:"Storage rule",h:2}]},"zh-CN":{content:"<section class=\"markdown\"><h2 id=\"\u5199\u5728\u524d\u9762\">\u5199\u5728\u524d\u9762<a onclick=\"window.location.hash = '\u5199\u5728\u524d\u9762'\" class=\"anchor\">#</a></h2><p>Mock \u89c4\u5219\u6570\u636e\u662f\u4e00\u4e2a <code>Object</code> \u5bf9\u8c61\uff0cKey \u4e3a\u8bf7\u6c42\u57df\u58f0\u660e\uff0cValue \u4e3a\u54cd\u5e94\u5185\u5bb9\uff0c\u4f8b\u5982\uff1a</p><pre class=\"hljs language-ts\"><code>export const USERS = {\n  'GET /users': { users: [1, 2], total: 2 },\n}</code></pre><p>\u8868\u793a\u5f53\u901a\u8fc7 <code>HttpClient.get('/users')</code> \u8bbf\u95ee\u65f6\uff0c\u4f1a\u76f4\u63a5\u8fd4\u56de <code>{ users: [1, 2], total: 2 }</code>\uff0c\u5e76\u4e14\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55 HTTP \u8bf7\u6c42\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 <code>Network</code> \u9762\u677f\u6765\u786e\u8ba4\u3002</p><h2 id=\"Key-\u8bf7\u6c42\u57df\u58f0\u660e\">Key \u8bf7\u6c42\u57df\u58f0\u660e<a onclick=\"window.location.hash = 'Key-\u8bf7\u6c42\u57df\u58f0\u660e'\" class=\"anchor\">#</a></h2><p>\u4f7f\u7528 <code>' '</code> \u7a7a\u683c\u6765\u533a\u9694\u8bf7\u6c42\u65b9\u6cd5\u548cURL\uff0c\u8bf7\u6c42\u65b9\u6cd5\u53ef\u5ffd\u7565\uff0c\u9ed8\u8ba4\u4e3a <code>GET</code>\uff1bURL \u652f\u6301\u8def\u7531\u53c2\u6570\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u4e00\u4e9b\u6709\u6548\u7684 Key\uff1a</p><pre class=\"hljs language-ts\"><code>export const USERS = {\n  'GET /users': null,\n  // GET \u53ef\u7701\u7565\n  '/users/1': null,\n  // POST \u8bf7\u6c42\n  'POST /users/1': null,\n  // \u8def\u7531\u53c2\u6570\n  '/users/:id': null,\n  // \u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u7528 `()` \u5305\u88f9\n  '/data/(.*)': null\n};</code></pre><h2 id=\"Value-\u54cd\u5e94\u5185\u5bb9\">Value \u54cd\u5e94\u5185\u5bb9<a onclick=\"window.location.hash = 'Value-\u54cd\u5e94\u5185\u5bb9'\" class=\"anchor\">#</a></h2><p>\u54cd\u5e94\u5185\u5bb9\u652f\u6301\u4e09\u79cd\u7c7b\u578b\uff1a<code>Object</code>\u3001<code>Array</code>\u3001<code>(req: MockRequest) => any</code>\u3002</p><pre class=\"hljs language-ts\"><code>import { MockStatusError } from '@delon/mock';\n\nexport const USERS = {\n  // Array\n  '/users': [ { uid: 1 }, { uid: 2 } ],\n  // Object\n  '/users': { uid: 1 },\n  // Function\n  '/qs': (req: MockRequest) => req.queryString.pi,\n  // \u652f\u6301\u8fd4\u56de\u5b8c\u6574\u7684 HttpResponse\n  '/http': (req: MockRequest) => new HttpResponse({ body: 'Body', headers: new HttpHeaders({ 'token': '1' }) }),\n  // \u53d1\u9001 Status \u9519\u8bef\n  '/404': () => { throw new MockStatusError(404); }\n};</code></pre><h3 id=\"MockRequest\">MockRequest<a onclick=\"window.location.hash = 'MockRequest'\" class=\"anchor\">#</a></h3><table><thead><tr><th>\u540d\u79f0</th><th>\u7c7b\u578b</th><th>\u63cf\u8ff0</th></tr></thead><tbody><tr><td><code>[params]</code></td><td><code>any</code></td><td>\u8def\u7531\u53c2\u6570\uff0c<code>/:id</code> \u5219 <code>params.id</code></td></tr><tr><td><code>[queryString]</code></td><td><code>any</code></td><td>URL\u53c2\u6570\uff0c<code>/users?pi=1&ps=10</code> \u5219 <code>queryString.pi</code>\u3001<code>queryString.ps</code></td></tr><tr><td><code>[headers]</code></td><td><code>any</code></td><td>Headers \u503c</td></tr><tr><td><code>[body]</code></td><td><code>any</code></td><td>\u8bf7\u6c42 body</td></tr><tr><td><code>[original]</code></td><td><code>HttpRequest&lt;any></code></td><td>\u539f\u59cb <code>HttpRequest</code></td></tr></tbody></table><h3 id=\"MockStatusError\">MockStatusError<a onclick=\"window.location.hash = 'MockStatusError'\" class=\"anchor\">#</a></h3><p>\u5f53\u4f60\u5e0c\u671b\u54cd\u5e94\u4e00\u4e2a <code>404</code> \u5f02\u5e38\u65f6\u3002</p><h2 id=\"\u4e00\u4e9b\u793a\u4f8b\">\u4e00\u4e9b\u793a\u4f8b<a onclick=\"window.location.hash = '\u4e00\u4e9b\u793a\u4f8b'\" class=\"anchor\">#</a></h2><pre class=\"hljs language-ts\"><code>import { MockStatusError } from '@delon/mock';\n\nexport const USERS = {\n  // \u652f\u6301\u503c\u4e3a Object \u548c Array\n  'GET /users': { users: [1, 2], total: 2 },\n  // GET \u53ef\u7701\u7565\n  '/users/1': { users: [1, 2], total: 2 },\n  // POST \u8bf7\u6c42\n  'POST /users/1': { uid: 1 },\n  // \u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 queryString\u3001headers\u3001body\n  '/qs': (req: MockRequest) => req.queryString.pi,\n  // \u8def\u7531\u53c2\u6570\n  '/users/:id': (req: MockRequest) => req.params, // /users/100, output: { id: 100 }\n  // \u53d1\u9001 Status \u9519\u8bef\n  '/404': () => { throw new MockStatusError(404); },\n  // \u4f7f\u7528 () \u8868\u793a\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\n  '/data/(.*)': (req: MockRequest) => req\n};</code></pre><h2 id=\"\u5b58\u50a8\u89c4\u5219\">\u5b58\u50a8\u89c4\u5219<a onclick=\"window.location.hash = '\u5b58\u50a8\u89c4\u5219'\" class=\"anchor\">#</a></h2><p>\u4e00\u822c\u6765\u8bf4 Mock \u90fd\u662f\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9700\u8981\uff0c\u56e0\u6b64\u5efa\u8bae\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a <code>_mock</code> \u76ee\u5f55\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a <code>index.ts</code> \u6587\u4ef6\u7528\u4e8e\u5bfc\u51fa\u6240\u6709\u6570\u636e\u89c4\u5219\uff0c\u53c2\u8003 <a target=\"_blank\" href=\"https://github.com/ng-alain/ng-alain/tree/master/_mock\" data-url=\"https://github.com/ng-alain/ng-alain/tree/master/_mock\">ng-alain/_mock</a>\u3002</p></section>",meta:{order:2,title:"\u89c4\u5219\u6570\u636e",type:"Documents"},toc:[{id:"\u5199\u5728\u524d\u9762",title:"\u5199\u5728\u524d\u9762",h:2},{id:"Key-\u8bf7\u6c42\u57df\u58f0\u660e",title:"Key \u8bf7\u6c42\u57df\u58f0\u660e",h:2},{id:"Value-\u54cd\u5e94\u5185\u5bb9",title:"Value \u54cd\u5e94\u5185\u5bb9",h:2},{id:"MockRequest",title:"MockRequest",h:3},{id:"MockStatusError",title:"MockStatusError",h:3},{id:"\u4e00\u4e9b\u793a\u4f8b",title:"\u4e00\u4e9b\u793a\u4f8b",h:2},{id:"\u5b58\u50a8\u89c4\u5219",title:"\u5b58\u50a8\u89c4\u5219",h:2}]}},demo:!1},this.codes=[]},r=function e(){_classCallCheck(this,e)},s=o("pMnS"),l=o("Ed4d"),i=o("QfCi"),u=o("R6D3"),b=o("WP5L"),h=o("71F0"),p=o("fE+l"),k=o("0RMT"),N=o("QcbP"),g=o("0D9X"),m=o("SpJI"),y=o("hBP+"),w=o("QPFe"),S=o("RdGh"),M=o("D9vs"),f=o("DyZ0"),q=o("TY3c"),R=o("u+Cy"),E=o("8+8K"),T=o("YVZs"),j=o("F/j7"),C=o("/EOF"),O=o("ZKYL"),U=o("SZk1"),D=o("5eO6"),z=o("CghO"),H=o("EdU/"),F=o("JRKe"),x=o("Sq/J"),P=o("/Yna"),v=o("9BMt"),G=o("kRch"),L=o("QkPN"),A=o("vBNu"),K=o("Z7t+"),Y=o("II6v"),V=o("MRB6"),_=o("uU7u"),I=o("iInd"),J=o("cUpR"),W=o("SVse"),Z=o("SCoL"),Q=a.yb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function B(e){return a.cc(0,[(e()(),a.Ab(0,0,null,null,1,"app-docs",[],null,null,null,K.b,K.a)),a.zb(1,245760,null,0,Y.a,[V.a,_.a,I.p,J.b,W.e,Z.a],{codes:[0,"codes"],item:[1,"item"]},null)],(function(e,t){var o=t.component;e(t,1,0,o.codes,o.item)}),null)}var X=a.wb("app-mock-getting-started",c,(function(e){return a.cc(0,[(e()(),a.Ab(0,0,null,null,1,"app-mock-getting-started",[],null,null,null,B,Q)),a.zb(1,49152,null,0,c,[],null,null)],null,null)}),{},{},[]),$=a.yb({encapsulation:0,styles:["[_nghost-%COMP%] { display: block }"],data:{}});function ee(e){return a.cc(0,[(e()(),a.Ab(0,0,null,null,1,"app-docs",[],null,null,null,K.b,K.a)),a.zb(1,245760,null,0,Y.a,[V.a,_.a,I.p,J.b,W.e,Z.a],{codes:[0,"codes"],item:[1,"item"]},null)],(function(e,t){var o=t.component;e(t,1,0,o.codes,o.item)}),null)}var te=a.wb("app-mock-rule",n,(function(e){return a.cc(0,[(e()(),a.Ab(0,0,null,null,1,"app-mock-rule",[],null,null,null,ee,$)),a.zb(1,49152,null,0,n,[],null,null)],null,null)}),{},{},[]),oe=o("s7LF"),ae=o("1O3W"),de=o("9gLZ"),ce=o("sAdM"),ne=o("ekcc"),re=o("9b/N"),se=o("NFMk"),le=o("0YeR"),ie=o("pQl/"),ue=o("f/Zj"),be=o("vZwM"),he=o("g+Fz"),pe=o("Ybye"),ke=o("10Ig"),Ne=o("iC8E"),ge=o("1z/I"),me=o("7KAL"),ye=o("Rgb0"),we=o("+YBk"),Se=o("9J0+"),Me=o("66zS"),fe=o("vIiB"),qe=o("dZIx"),Re=o("PgQK"),Ee=o("W0Pu"),Te=o("px0D"),je=o("r19J"),Ce=o("Jp/u"),Oe=o("WJhm"),Ue=o("GaVp"),De=o("YdS3"),ze=o("mW00"),He=o("JidZ"),Fe=o("jQCg"),xe=o("3ZFI"),Pe=o("YEUz"),ve=o("CYS+"),Ge=o("YRt3"),Le=o("lAiz"),Ae=o("HeVh"),Ke=o("tYkK"),Ye=o("wf2+"),Ve=o("eCGT"),_e=o("JK0T"),Ie=o("Rki0"),Je=o("kS4m"),We=o("W4B1"),Ze=o("NDed"),Qe=o("jTf7"),Be=o("ozKM"),Xe=o("DQmg"),$e=o("XFzh"),et=o("HhpN"),tt=o("SN7N"),ot=o("fwnu"),at=o("RVNi"),dt=o("gaRz"),ct=o("XYAa"),nt=o("sbFH"),rt=o("anqq"),st=o("EWQH"),lt=o("YQXl"),it=o("k5cy"),ut=o("hS58"),bt=o("aq9g"),ht=o("SHEi"),pt=o("/L1H"),kt=o("phDe"),Nt=o("vZsH"),gt=o("fb/r"),mt=o("haRT"),yt=o("EcpC"),wt=o("SBNi"),St=o("1Cev"),Mt=o("2bDw"),ft=o("Ogil"),qt=o("34DM"),Rt=o("+ndR"),Et=o("G1y0"),Tt=o("MNSj"),jt=o("CGSU"),Ct=o("ekmu"),Ot=o("5CFV"),Ut=o("7Dpl"),Dt=o("v1Dh"),zt=o("N2O2"),Ht=o("rJp6"),Ft=o("l/Xz"),xt=o("sRo1"),Pt=o("BQzg"),vt=o("zTFG"),Gt=o("1+nf"),Lt=o("vjj7"),At=o("ev4S"),Kt=o("GTZx"),Yt=o("vrge"),Vt=o("nMAq"),_t=o("5PV9"),It=o("nIn3"),Jt=o("xo13"),Wt=o("CnVV"),Zt=o("5p8d"),Qt=o("qYUw"),Bt=o("JpOc"),Xt=o("ye40"),$t=o("VRoF"),eo=o("Uto7"),to=o("/p+U"),oo=o("qcxY"),ao=o("T+Em"),co=o("WNQ9"),no=o("pv0S"),ro=o("JXeA"),so=o("IYs4"),lo=o("wQFA"),io=o("FPpa"),uo=o("5Izy"),bo=o("z+yo"),ho=o("s2Rw"),po=o("76lH"),ko=o("TSSN"),No=o("Fg/6"),go=o("kzz5"),mo=o("YgDb"),yo=o("Wl7g"),wo=o("+TYD"),So=o("PCNd"),Mo=a.xb(r,[],(function(e){return a.Mb([a.Nb(512,a.j,a.bb,[[8,[s.a,l.b,l.a,i.a,u.a,b.a,h.a,p.a,k.a,N.a,g.a,m.a,y.a,w.a,S.a,M.a,f.a,q.a,R.a,E.a,T.a,j.a,C.a,O.a,U.a,D.a,z.a,H.a,F.a,x.a,P.a,v.a,G.a,L.a,A.a,X,te]],[3,a.j],a.x]),a.Nb(4608,W.p,W.o,[a.u]),a.Nb(4608,oe.x,oe.x,[]),a.Nb(4608,oe.f,oe.f,[]),a.Nb(4608,ae.d,ae.d,[ae.k,ae.f,a.j,ae.i,ae.g,a.r,a.z,W.e,de.b,[2,W.j]]),a.Nb(5120,ae.l,ae.m,[ae.d]),a.Nb(5120,ce.b,ce.a,[[3,ce.b],ne.a]),a.Nb(4608,re.c,re.c,[]),a.Nb(135680,se.i,se.i,[ae.d,a.r,le.b,[3,se.i]]),a.Nb(4608,ie.d,ie.d,[a.z]),a.Nb(4608,ue.c,ue.c,[]),a.Nb(5120,be.e,be.g,[W.e,[3,be.e]]),a.Nb(4608,he.d,he.d,[W.e]),a.Nb(4608,pe.a,pe.a,[se.i]),a.Nb(4608,ke.a,ke.a,[Ne.d]),a.Nb(1073742336,W.c,W.c,[]),a.Nb(1073742336,oe.w,oe.w,[]),a.Nb(1073742336,oe.j,oe.j,[]),a.Nb(1073742336,I.t,I.t,[[2,I.y],[2,I.p]]),a.Nb(1073742336,oe.t,oe.t,[]),a.Nb(1073742336,de.a,de.a,[]),a.Nb(1073742336,ge.f,ge.f,[]),a.Nb(1073742336,Z.b,Z.b,[]),a.Nb(1073742336,me.c,me.c,[]),a.Nb(1073742336,me.g,me.g,[]),a.Nb(1073742336,ae.h,ae.h,[]),a.Nb(1073742336,ye.b,ye.b,[]),a.Nb(1073742336,we.a,we.a,[]),a.Nb(1073742336,Se.a,Se.a,[Me.d]),a.Nb(1073742336,fe.a,fe.a,[]),a.Nb(1073742336,qe.a,qe.a,[]),a.Nb(1073742336,Re.a,Re.a,[]),a.Nb(1073742336,Ee.b,Ee.b,[]),a.Nb(1073742336,Me.b,Me.b,[]),a.Nb(1073742336,Te.f,Te.f,[]),a.Nb(1073742336,je.b,je.b,[]),a.Nb(1073742336,Ce.c,Ce.c,[]),a.Nb(1073742336,Oe.b,Oe.b,[]),a.Nb(1073742336,Ue.c,Ue.c,[]),a.Nb(1073742336,De.d,De.d,[]),a.Nb(1073742336,ze.d,ze.d,[]),a.Nb(1073742336,He.a,He.a,[]),a.Nb(1073742336,Fe.f,Fe.f,[]),a.Nb(1073742336,xe.b,xe.b,[]),a.Nb(1073742336,re.d,re.d,[]),a.Nb(1073742336,Pe.a,Pe.a,[Pe.d]),a.Nb(1073742336,ve.c,ve.c,[]),a.Nb(1073742336,Ge.b,Ge.b,[]),a.Nb(1073742336,Le.a,Le.a,[]),a.Nb(1073742336,Le.c,Le.c,[]),a.Nb(1073742336,Ae.b,Ae.b,[]),a.Nb(1073742336,Ke.b,Ke.b,[]),a.Nb(1073742336,Ye.e,Ye.e,[]),a.Nb(1073742336,Ve.b,Ve.b,[]),a.Nb(1073742336,_e.b,_e.b,[]),a.Nb(1073742336,Ie.a,Ie.a,[]),a.Nb(1073742336,se.g,se.g,[]),a.Nb(1073742336,Je.d,Je.d,[]),a.Nb(1073742336,We.b,We.b,[]),a.Nb(1073742336,Ze.c,Ze.c,[]),a.Nb(1073742336,Qe.j,Qe.j,[]),a.Nb(1073742336,Be.b,Be.b,[]),a.Nb(1073742336,Xe.b,Xe.b,[]),a.Nb(1073742336,$e.b,$e.b,[]),a.Nb(1073742336,et.c,et.c,[]),a.Nb(1073742336,tt.c,tt.c,[]),a.Nb(1073742336,ot.b,ot.b,[]),a.Nb(1073742336,at.b,at.b,[]),a.Nb(1073742336,dt.d,dt.d,[]),a.Nb(1073742336,ct.a,ct.a,[]),a.Nb(1073742336,nt.a,nt.a,[]),a.Nb(1073742336,rt.b,rt.b,[]),a.Nb(1073742336,st.a,st.a,[]),a.Nb(1073742336,ie.c,ie.c,[]),a.Nb(1073742336,lt.a,lt.a,[]),a.Nb(1073742336,it.a,it.a,[]),a.Nb(1073742336,ut.a,ut.a,[]),a.Nb(1073742336,bt.a,bt.a,[]),a.Nb(1073742336,ht.c,ht.c,[]),a.Nb(1073742336,pt.j,pt.j,[]),a.Nb(1073742336,kt.a,kt.a,[]),a.Nb(1073742336,kt.d,kt.d,[]),a.Nb(1073742336,Nt.d,Nt.d,[]),a.Nb(1073742336,ue.b,ue.b,[]),a.Nb(1073742336,gt.b,gt.b,[]),a.Nb(1073742336,mt.m,mt.m,[]),a.Nb(1073742336,yt.b,yt.b,[]),a.Nb(1073742336,wt.b,wt.b,[]),a.Nb(1073742336,St.a,St.a,[]),a.Nb(1073742336,Mt.a,Mt.a,[]),a.Nb(1073742336,ft.a,ft.a,[]),a.Nb(1073742336,qt.a,qt.a,[]),a.Nb(1073742336,Rt.a,Rt.a,[]),a.Nb(1073742336,Et.a,Et.a,[]),a.Nb(1073742336,Tt.a,Tt.a,[]),a.Nb(1073742336,jt.a,jt.a,[]),a.Nb(1073742336,Ct.a,Ct.a,[]),a.Nb(1073742336,Ot.a,Ot.a,[]),a.Nb(1073742336,Ut.a,Ut.a,[]),a.Nb(1073742336,Dt.b,Dt.b,[]),a.Nb(1073742336,zt.f,zt.f,[]),a.Nb(1073742336,Ht.c,Ht.c,[]),a.Nb(1073742336,Ft.a,Ft.a,[]),a.Nb(1073742336,xt.a,xt.a,[]),a.Nb(1073742336,Pt.a,Pt.a,[]),a.Nb(1073742336,vt.m,vt.m,[]),a.Nb(1073742336,Gt.f,Gt.f,[]),a.Nb(1073742336,Lt.a,Lt.a,[]),a.Nb(1073742336,At.a,At.a,[]),a.Nb(1073742336,Kt.a,Kt.a,[]),a.Nb(1073742336,Yt.a,Yt.a,[]),a.Nb(1073742336,Vt.a,Vt.a,[]),a.Nb(1073742336,_t.a,_t.a,[]),a.Nb(1073742336,It.a,It.a,[]),a.Nb(1073742336,Jt.a,Jt.a,[]),a.Nb(1073742336,Wt.a,Wt.a,[]),a.Nb(1073742336,Zt.a,Zt.a,[]),a.Nb(1073742336,Qt.a,Qt.a,[]),a.Nb(1073742336,Bt.a,Bt.a,[]),a.Nb(1073742336,Xt.a,Xt.a,[]),a.Nb(1073742336,$t.a,$t.a,[]),a.Nb(1073742336,eo.a,eo.a,[]),a.Nb(1073742336,to.a,to.a,[]),a.Nb(1073742336,oo.a,oo.a,[]),a.Nb(1073742336,ao.a,ao.a,[]),a.Nb(1073742336,co.a,co.a,[]),a.Nb(1073742336,no.a,no.a,[]),a.Nb(1073742336,ro.e,ro.e,[]),a.Nb(1073742336,ro.c,ro.c,[]),a.Nb(1073742336,so.b,so.b,[]),a.Nb(1073742336,lo.d,lo.d,[]),a.Nb(1073742336,io.c,io.c,[]),a.Nb(1073742336,uo.b,uo.b,[]),a.Nb(1073742336,Ne.e,Ne.e,[]),a.Nb(1073742336,Ne.b,Ne.b,[]),a.Nb(1073742336,bo.c,bo.c,[]),a.Nb(1073742336,ho.b,ho.b,[]),a.Nb(1073742336,po.a,po.a,[]),a.Nb(1073742336,ko.i,ko.i,[]),a.Nb(1073742336,No.b,No.b,[]),a.Nb(1073742336,go.a,go.a,[]),a.Nb(1073742336,he.c,he.c,[]),a.Nb(1073742336,mo.c,mo.c,[]),a.Nb(1073742336,yo.d,yo.d,[]),a.Nb(1073742336,yo.h,yo.h,[]),a.Nb(1073742336,yo.b,yo.b,[]),a.Nb(1073742336,yo.j,yo.j,[]),a.Nb(1073742336,yo.l,yo.l,[]),a.Nb(1073742336,yo.p,yo.p,[]),a.Nb(1073742336,yo.t,yo.t,[]),a.Nb(1073742336,wo.a,wo.a,[]),a.Nb(1073742336,So.a,So.a,[]),a.Nb(1073742336,r,r,[]),a.Nb(256,ne.a,we.b,[]),a.Nb(1024,I.m,(function(){return[[{path:"",component:d.a,children:[{path:"",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started",redirectTo:"getting-started/zh",pathMatch:"full"},{path:"getting-started/:lang",component:c},{path:"rule",redirectTo:"rule/zh",pathMatch:"full"},{path:"rule/:lang",component:n}]}]]}),[])])}))}}]);